prog2:
  redef 0000
  redef 0100
  redef 1000
  redef 1011
  slb $s0, 0100
  redef 0111
  sli $s0, 4
  slb $s1, 0101
  sli $s1, 4
  slb $s1, 1110
  slb $s2, 1111
loop:
  redef 0000
  redef 0100
  redef 1000
  redef 0011
  redef 0110
  lw $r0, $s0
  redef 0111
  addi $s0, 1
  redef 0110
  lw $r1, $s0
  redef 0100
  sli $p0, 8
  redef 0010
  or $p0, $p0, $r0
  sri $p0, 7
  sli $p1, 8
  or $p1, $p1, $r1
  sli $p1, 1
  redef 0000
  or $p0, $p0, $p1
  ! begin xor_bits
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 4
  sli $p0, 4
  sri $p0, 4
  xor $p0, $p0, $p1
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 2
  sli $p0, 6
  sri $p0, 6
  xor $p0, $p0, $p1
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 1
  sli $p0, 7
  sri $p0, 7
  xor $p0, $p0, $p1
  sli $p1, 8
  ! end xor_bits
  redef 0111
  redef 1011
  xor $s3, $s3, $p0
  sli $s3, 1
  redef 0100
  sli $p0, 8
  redef 0010
  redef 1000
  or $p0, $p0, $r0
  sli $p0, 1
  sri $p0, 4
  or $p1, $p1, $r1
  sri $p1, 3
  sli $p1, 4
  redef 0000
  or $p0, $p0, $p1
  ! begin xor_bits
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 4
  sli $p0, 4
  sri $p0, 4
  xor $p0, $p0, $p1
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 2
  sli $p0, 6
  sri $p0, 6
  xor $p0, $p0, $p1
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 1
  sli $p0, 7
  sri $p0, 7
  xor $p0, $p0, $p1
  sli $p1, 8
  ! end xor_bits
  redef 0111
  redef 1011
  xor $s3, $s3, $p0
  sli $s3, 1
  redef 0100
  sli $p0, 8
  redef 0010
  redef 1000
  or $p0, $p0, $r0
  sri $p0, 5
  sli $p0, 6
  or $p1, $p1, $r0
  sri $p1, 1
  sli $p1, 6
  sri $p1, 2
  redef 0000
  or $p0, $p0, $p1
  sli $p1, 8
  redef 0010
  or $p1, $p1, $r1
  sli $p1, 1
  sri $p1, 6
  sli $p1, 2
  or $p2, $p2, $r1
  sli $p2, 5
  sri $p2, 6
  redef 0000
  or $p1, $p1, $p2
  or $p0, $p0, $p1
  ! begin xor_bits
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 4
  sli $p0, 4
  sri $p0, 4
  xor $p0, $p0, $p1
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 2
  sli $p0, 6
  sri $p0, 6
  xor $p0, $p0, $p1
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 1
  sli $p0, 7
  sri $p0, 7
  xor $p0, $p0, $p1
  sli $p1, 8
  ! end xor_bits
  redef 0111
  redef 1011
  xor $s3, $s3, $p0
  sli $s3, 1
  redef 0100
  sli $p0, 8
  sli $p2, 8
  redef 0010
  redef 1000
  or $p0, $p0, $r0
  slb $p3, 0101
  sli $p3, 4
  slb $p3, 0101
  redef 0000
  and $p0, $p0, $p3
  redef 0010
  or $p1, $p1, $r1
  redef 0000
  and $p1, $p1, $p3
  sli $p1, 1
  or $p0, $p0, $p1
  ! begin xor_bits
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 4
  sli $p0, 4
  sri $p0, 4
  xor $p0, $p0, $p1
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 2
  sli $p0, 6
  sri $p0, 6
  xor $p0, $p0, $p1
  sli $p1, 8
  or $p1, $p0, $p1
  sri $p1, 1
  sli $p0, 7
  sri $p0, 7
  xor $p0, $p0, $p1
  sli $p1, 8
  ! end xor_bits
  sli $p3, 8
  redef 0111
  redef 1011
  xor $s3, $s3, $p0
  redef 0100
  sli $p0, 8
  redef 0011
  redef 1000
  slt $p0, $p0, $s3
  slb $p1, 0001
  redef 0000
  xor $p0, $p0, $p1
  redef 0001
  redef 0101
  redef 1001
  slb $q3, 0000
  sli $q3, 4
  slb $q3, 1000
  redef 0100
  bnz $p0, decode
  redef 0111
  subi $s3, 1
  subi $s3, 8
  redef 0000
  redef 1000
  slt $p0, $s3, $p0
  redef 0001
  redef 0101
  redef 1001
  slb $q3, 0000
  sli $q3, 4
  slb $q3, 0010
  redef 0100
  bnz $p0, mem0
  redef 1010
  slb $r2, 0001
  redef 0101
  redef 1001
  slb $q3, 0000
  sli $q3, 4
  slb $q3, 0011
  redef 0100
  bnz $p1, flipping
mem0:
  redef 0000
  redef 0100
  redef 1000
  redef 0111
  addi $s3, 8
flipping:
  redef 0000
  redef 0100
  redef 1000
  slb $p0, 0100
  redef 0011
  and $p0, $p0, $s3
  sri $p0, 2
  slb $p2, 0001
  redef 0000
  xor $p0, $p0, $p2
  redef 0001
  redef 0101
  redef 1001
  slb $q3, 0000
  sli $q3, 4
  slb $q3, 0100
  redef 0100
  bnz $p0, notfour
  sli $p1, 4
notfour:
  redef 0000
  redef 0100
  redef 1000
  slb $p0, 0010
  redef 0011
  and $p0, $p0, $s3
  sri $p0, 1
  redef 0000
  xor $p0, $p0, $p2
  redef 0001
  redef 0101
  redef 1001
  slb $q3, 0000
  sli $q3, 4
  slb $q3, 0101
  redef 0100
  bnz $p0, nottwo
  sli $p1, 2
nottwo:
  redef 0000
  redef 0100
  redef 1000
  slb $p0, 0001
  redef 0011
  and $p0, $p0, $s3
  redef 0000
  xor $p0, $p0, $p2
  redef 0001
  redef 0101
  redef 1001
  slb $q3, 0000
  sli $q3, 4
  slb $q3, 0110
  redef 0100
  bnz $p0, notone
  sli $p1, 1
notone:
  redef 0000
  redef 0100
  redef 1000
  redef 0001
  redef 0101
  redef 1001
  slb $q3, 0000
  sli $q3, 4
  slb $q3, 0111
  redef 0110
  bnz $r2, mem1flip
  redef 0000
  redef 1010
  xor $r0, $r0, $p1
  redef 0001
  redef 0101
  redef 1001
  slb $q3, 0000
  sli $q3, 4
  slb $q3, 1000
  redef 0100
  bnz $p2, decode
mem1flip:
  redef 0000
  redef 0100
  redef 1000
  redef 0110
  redef 1010
  xor $r1, $r1, $p1
decode:
  redef 0000
  redef 0100
  redef 1000
  redef 0010
  redef 0101
  redef 1001
  or $q0, $q0, $r1
  sri $q0, 4
  or $q1, $q1, $r1
  sli $q1, 4
  redef 0110
  sri $r1, 8
  redef 0001
  redef 1010
  or $r1, $r1, $q0
  redef 0101
  sri $q0, 8
  redef 0010
  redef 1001
  or $q0, $q0, $r0
  sli $q0, 1
  sri $q0, 5
  sli $q0, 1
  redef 0001
  or $q1, $q0, $q1
  sli $q0, 8
  redef 0010
  or $q0, $q0, $r0
  sli $q0, 5
  sri $q0, 7
  redef 0001
  or $q1, $q0, $q1
  redef 0110
  sli $r0, 8
  redef 1010
  or $r0, $r0, $q1
  redef 0011
  sw $r0, $s1
  redef 0111
  addi $s1, 1
  redef 0110
  sw $r1, $s1
  redef 0111
  addi $s1, 1
  addi $s0, 1
  subi $s2, 1
  sri $s3, 8
  redef 0101
  sri $q0, 8
  sri $q1, 8
  redef 0110
  sri $r2, 8
  redef 0100
  sri $p0, 8
  sri $p1, 8
  sri $p2, 8
  sri $p3, 8
  redef 0001
  redef 0101
  redef 1001
  slb $q3, 0000
  sli $q3, 4
  slb $q3, 0001
  redef 0111
  bnz $s2, loop
finished: ! what to do when finished?
  redef 0000
  redef 0100
  redef 1000

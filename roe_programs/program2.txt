fec_decode:
  slb $s0, 0100
  sli $s0, 4
  slb $s1, 0101
  sli $s1, 4
  slb $s1, 1110
  slb $s2, 1111
loop:
  lw $r0, $s0
  addi $s0, 1
  lw $r1, $s0
  or $p0, $p0, $r0
  sri $p0, 7
  or $p1, $p1, $r1
  sli $p1, 1
  or $p0, $p0, $p1
  xor_bits
  xor $s3, $s3, $p0
  sli $s3, 1
  sli $p0, 8
  or $p0, $p0, $r0
  sli $p0, 1
  sri $p0, 4
  or $p1, $p1, $r1
  sri $p1, 3
  sli $p1, 4
  or $p0, $p0, $p1
  xor_bits
  xor $s3, $s3, $p0
  sli $s3, 1
  sli $p0, 8
  or $p0, $p0, $r0
  sri $p0, 5
  sli $p0, 6
  or $p1, $p1, $r0
  sri $p1, 1
  sli $p1, 6
  sri $1, 2
  or $p0, $p0, $p1
  sli $p1, 8
  or $p1, $p1, $r1
  sli $p1, 1
  sri $p1, 6
  sli $p1, 2
  or $p2, $p2, $r1
  sli $p2, 5
  sri $p2, 6
  or $p1, $p1, $p2
  or $p0, $p0, $p1
  xor_bits
  xor $s3, $s3, $p0
  sli $s3, 1
  sli $p0, 8
  sli $p2, 8
  or $p0, $p0, $r0
  slb $p3, 0101
  sli $p3, 4
  slb $p3, 0101
  and $p0, $p0, $p3
  or $p1, $p1, $r1
  and $p1, $p1, $p3
  sli $p1, 1
  or $p0, $p0, $p1
  xor_bits
  sli $p3, 8
  xor $s3, $s3, $p0
  sli $p0, 8
  slt $p0, $p0, $s3
  slb $p1, 0001
  xor $p0, $p0, $p1
  bnz $p0, noerr
  subi $s3, 1
  subi $s3, 8
  slt $p0, $s3, $p0
  bnz $p0, mem0
  slb $r2, 0001
  bnz $p1, flipping
  mem0:
  addi $s3, 8
  flipping:
  slb $p0, 0100
  and $p0, $p0, $s3
  sri $p0, 2
  slb $p2, 0001
  xor $p0, $p0, $p2
  bnz $p0, notfour
  sli $p1, 4
  notfour:
  slb $p0, 0010
  and $p0, $p0, $s3
  sri $p0, 1
  xor $p0, $p0, $p2
  bnz $p0, nottwo
  sli $p1, 2
  nottwo:
  slb $p0, 0001
  and $p0, $p0, $s3
  xor $p0, $p0, $p2
  bnz $p0, notone
  sli $p1, 1
  notone:
  bnz $r2, mem1flip
  xor $r0, $r0, $p1
  bnz $p2, decode
  mem1flip:
  xor $r1, $r1, $p1
  decode: 
  or $q0, $q0, $r1
  sri $q0, 4
  or $q1, $q1, $r1
  sli $q1, 4
  sri $r1, 8
  or $r1, r1, $q0
  sri $q0, 8
  or $q0, $q0, $r0
  sli $q0, 1
  sri $q0, 5
  sli $q0, 1
  or $q1, $q0, $q1
  sli $q0, 8
  or $q0, $q0, $r0
  sli $q0, 5
  sri $q0, 7
  or $q1, $q0, $q1
  sli $r0, 8
  or $r0, $r0, $q1
  sw $r0, $s1
  addi $s1, 1
  addi $s0, 1
  subi $s2, 1
  sri $s3, 8
  sri $q0, 8
  sri $q1, 8
  sri $r2, 8
  sri $p0, 8
  sri $p1, 8
  sri $p2, 8
  sri $p3, 8
  bnz $s2, loop
finished: ! what to do when finished?
